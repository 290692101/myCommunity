# 应用名称
spring.application.name=test_jpa
# 应用服务 WEB 访问端口
server.port= 8080
# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
spring.thymeleaf.cache= true
# 检查模板是否存在，然后再呈现
spring.thymeleaf.check-template= true
 检查模板位置是否正确（默认值 :true ）



下面是可以连到sql的配置
spring.thymeleaf.check-template-location= true
#Content-Type 的值（默认值： text/html ）
spring.thymeleaf.content-type=text/html
# 开启 MVC Thymeleaf 视图解析（默认值： true ）
spring.thymeleaf.enabled=true
# 模板编码
spring.thymeleaf.encoding=UTF-8
# 要被排除在解析之外的视图名称列表，⽤逗号分隔
spring.thymeleaf.excluded-view-names=
# 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML5)
spring.thymeleaf.mode=HTML5
# 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
spring.thymeleaf.prefix=classpath:/templates/
# 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
spring.thymeleaf.suffix=.html

#数据库地址 暂时使用自定义的database
spring.datasource.url=jdbc:mysql://192.168.176.128:3306/sqltest
spring.datasource.username=m290
#数据库密码
spring.datasource.password=lch7219536
#数据库驱动
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

####
#JPA持久化配置
####
#指定数据库类型
spring.jpa.database=MYSQL
#指定是否在日志中显示SQL语句
spring.jpa.show-sql=true
#指定自动创建、更新数据库表等配置，update表示如果数据库中存在持久化类对应的表就不创建，不存在就创建对应的表
spring.jpa.hibernate.ddl-auto=update
#让控制器输出的JSON字符串格式更美观
spring.jackson.serialization.indent-output=true
